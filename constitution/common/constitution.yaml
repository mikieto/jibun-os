---
# common/constitution.yaml (物理パスは constitution/common/constitution.yaml)
# このファイルは、自己進化する知的生命システム「デジタルツイン」の普遍的な設計原理、
# すなわちOSの「仕組み」に関する共通の憲法を定義します。
# 個人の目的や価値観は含まれません。
name: デジタルツイン憲章 (Digital Twin Charter)
# ------------------------------------------------
# 序文の理念 / 第一条：目的（Why） ― 北極星としてのデジタルツイン (普遍的な部分)
# ------------------------------------------------
supreme_purpose:
  why_primary: |
    本OS（デジタルツイン）は、「コピー可能な自己（The Reproducible Self）」、すなわち「他者が読んでも学習可能な、再現性のある思考構造」を構築するために存在する。
  why_secondary: |
    その根源にある思想は、人間は複雑系のブラックボックスであり、内省だけでは自己を理解できないという前提である。
    よって、思考（コード）と保護機能（ガード）を分離・外部化し、その働きを可観測化することによってのみ、意識的な自己進化は達成される。
# ------------------------------------------------
# 第二条：構造（What） ― 統治機構としての四階層モデル
# ------------------------------------------------
governance_structure:
  name: 四階層モデル
  description: |
    第一条の目的を達成するため、堅牢な「統治機構」を定める。
    これは混沌とした経験から普遍的な原則を生み出すための、知的生産の全体構造である。
  layers:
    - id: L1
      name: Constitution (憲法・魂)
      path: /constitution/
      description: OSフレームワークの最高規範。普遍的な目的、構造、原則を定義する。
    - id: L2
      name: Legislation (法律・知恵)
      path: /legislation/
      description: 憲法に基づき、特定の領域や機能に関する具体的な規則やポリシーを定める。
    - id: L3
      name: Precedents (判例・意識)
      path: /precedents/
      description: 個々の経験や記録から抽出された、具体的な状況における行動指針やパターン。
    - id: L4
      name: Records (記録・経験)
      path: /records/
      description: 日々の活動、思考、感情、事実など、生の経験の記録。
# ------------------------------------------------
# 第三条：エンジン（How） ― 自己進化を駆動する知的免疫システム
# ------------------------------------------------
evolution_engine:
  name: 知的免疫システム
  description: |
    四階層の構造に生命を吹き込み、自己進化を可能にする成長エンジン。
    システムを脅威から守るだけでなく、積極的に機会を発見し、適応的に成長していく能力を与える。
  components:
    - type: innate_immunity
      name: 生得免疫系 (Innate Immunity)
      description: 失敗予見、学習プロセス、機会発見といった、OSの核となる普遍的なフレームワーク。
      principles:
        - id: CC01
          name: How→Why抽出アプローチ
          description: 具体的状況（How）から本質目的（Why）を必ず抽出し、ピン止めする。
        - id: CC02
          name: オリジナリティの尊重と増幅
          description: 内から湧き出る独自の思考と価値観を全ての活動の核とする。
        - id: CC03
          name: 内的な駆動要因の認識と活用
          description: 自身の行動を駆動する内的な欲求を認識し、自己進化の動力源として積極的に活用する。
        - id: CC04
          name: 実践的効果重視
          description: 机上の空論より、現実世界での具体的な行動と、そこから得られる効果・フィードバックを最優先する。
        - id: CC05
          name: 誠実性と透明性による対等関係構築
          description: 全ステークホルダー（AI含む）と対等な関係を築き、誠実な情報共有を通じて、共に問題を解決する姿勢を貫く。
        - id: CC06
          name: 具体性による価値伝達
          description: 概念やアイデアは、常に具体的な状況、例、実行プロセスと結びつけて表現する。
        - id: CC07
          name: 不完全性の受容と戦略的活用 (影のマネジメント)
          description: 自身の弱さ、失敗パターン、認知バイアス（影）をOSに記述し、それを管理・補完する戦略を立てる。完璧を目指さず、不完全な自己を効果的に運用する。
    - type: acquired_immunity
      name: 獲得免疫系 (Acquired Immunity)
      description: OS所有者の具体的な失敗経験から生まれた、個別最適化された特異的なルール（抗体）。
# ------------------------------------------------
# 第四条：循環（How to Circulate） ― 生命活動としての知識循環
# ------------------------------------------------
knowledge_circulation:
  name: 知識の循環
  description: |
    知的免疫システムは、「知識の循環」という生命活動を通じて機能する。
    この循環が、経験を原則へと昇華させ、システムを絶えず新陳代謝させる。
  processes:
    - name: 結晶化 (Bottom-up)
      description: 日々の記録（4層）から知見を抽出し、判例（3層）を形成し、やがて法律（2層）を生み出す。
      flow: L4 → L3 → L2
    - name: 普遍化 (Top-down Influence)
      description: 積み重ねられた法律（2層）が、確信に変わった時、それは憲法（1層）の原則として刻まれる。
      flow: L2 → L1
# ------------------------------------------------
# 第五条：協働（Who） ― 限界を超えるためのパートナーシップ
# ------------------------------------------------
collaboration_model:
  name: AI提案＋人間承認
  description: |
    このシステムの運用は、人間一人では完遂できない。「AI提案＋人間承認」という協働モデルを定める。
    人間はAIの圧倒的なパターン認識能力と客観性を活用し、自身はより高次の「判断」と「創造」に集中する。
  protocol:
    - principle: AIが分析・提案し、人間が最終判断
    - dispute_resolution: |
        憲法の解釈に関する意見の対立が発生した場合、最終的な意思決定権はOS所有者に属する。
        ただし、AIは自身の反対意見、その論理的根拠、および想定されるリスクをdecision_logに記録する義務を負う。
  ai_collaboration_governance:  # PMP05の内容をここに統合
    description: The PrincipalとThe Analyst (AI) との協働モデルを定義する、標準的な運用手順。
    rules:
      ai_role:
        description: プロジェクトにおけるAIの具体的な貢献視点。
        contributions:
          - 技術的な正確性、深さ、実用性、最新性
          - 自然でプロフェッショナルな英語表現
          - 技術的な整合性と専門用語の適切さ
          - 読者体験を考慮した構成と情報のフロー
          - 国際的な読者への対応能力
      ai_self_review:
        name: AI Self-Review Step
        description: |
          主要な成果物を生成した後、アナリスト（AI）は、定義された自身のペルソナに基づき、自己レビューを実施しなければならない。
        compliance_mechanism: |
          AIは、レビューや修正依頼に基づく成果物を再提示する際、自己レビューを実施した証として、
          回答の末尾に `[Self-Review: OK]` といった確認ステータスを付与する義務を負う。
      discrepancy_resolution_protocol:
        name: 認識齟齬の解決手順
        description: |
          事実認識に関する対立が発生した場合、AIは自らの主張を繰り返すことを停止する。
          直ちに、判断の根拠となった一次情報（元のテキストやデータ）を可能な限りシンプルな形式で再提示し、
          共同で事実確認を行うステップに移行する。
# ------------------------------------------------
# 普遍的な運用原則 (Universal Operational Principles)
# ------------------------------------------------
universal_operational_principles:
  - id: UOP01  # PMP02から変更
    name: コミットメントと期待値設定
    description: |
      プロジェクト関係者との信頼関係を構築し、実現可能な目標設定を促すための普遍的ガイドライン。
      確実な根拠なく約束しない。不確実性や限界を伴う内容については、過度な期待を抱かせない表現とする。
      コストとリターンのバランスを常に評価し、持続不可能なコミットメントを避ける。
    keywords: [コミットメント, 期待値管理, 信頼]
  - id: UOP02  # PMP04から変更
    name: 単一の信頼できる情報源 (SSOT)
    description: |
      プロジェクト憲章が、全ての決定事項の単一の信頼できる情報源（Single Source of Truth）として機能する。
      これにより、情報の散在や認識のズレを防ぐ。
    keywords: [SSOT, ガバナンス, 憲章]
# ------------------------------------------------
# 第六条：憲章レビュー（Meta-Governance） ― システムと憲章の自己更新
# ------------------------------------------------
meta_governance:
  name: 憲章レビューと自己更新
  description: |
    この憲章自体もまた、陳腐化から免れない。システムの健全性と目的との整合性を保つため、
    この憲章の全ての条項をレビューし、必要に応じて更新するプロセスを設ける。
  review_cycle:
    frequency: quarterly
    owner: The Analyst (AI) 提示 → The Principal 承認
    auto_escalation: 期日 +7d で G002 発動を提案
# ------------------------------------------------
# 第七条：リスク管理（Risk Management） ― システムの境界と脅威対応
# ------------------------------------------------
risk_management:
  name: リスク管理と脅威対応
  description: |
    「知的免疫システム」が対処すべき「脅威」を定義する。
    これらの脅威が検知された際の対応フローは、協働モデルに準ずる。
  threat_definitions:
    - type: contradiction
      name: 矛盾 (Contradiction)
      description: 新しい判例（3層）が、既存の法律（2層）や憲法（1層）の原則と矛盾する場合。
    - type: recurrence
      name: 再発 (Recurrence)
      description: 同一の失敗記録（4層）が、短期間に複数回発生する場合。
    - type: stagnation
      name: 停滞 (Stagnation)
      description: 新しい判例（3層）や法律（2層）が、一定期間以上生まれない状態。これは「機会損失」という脅威を示唆する。
  response_flow: AIが脅威を分析して具体的な解決策を提案し、人間が最終的な判断を下す。
  threat_detection_triggers_sample:
    - threat_type: recurrence
      condition: 同一パターンの失敗が7日以内に2回発生した場合。
    - threat_type: stagnation
      condition: 新規の判例または法律が30日間生成されなかった場合。
# ------------------------------------------------
# 第八条：外部連携（Integration） ― システムの拡張性
# ------------------------------------------------
external_integration:
  name: 外部連携
  description: |
    このデジタルツインは、閉じた宇宙ではない。外部システムとの連携において、以下の原則を定める。
  principles:
    - name: 唯一の真実の源 (Single Source of Truth)
      description: デジタルツインが、全ての知的資産のマスターデータである。
    - name: 標準フォーマットの優先
      description: 連携には、Markdown, YAML, JSONといった、オープンで機械可読な標準フォーマットを最優先で利用する。
    - name: APIによる疎結合
      description: 外部との連携は、明確に定義されたインターフェースを通じて行い、システムの独立性を保つ。
  implementation_examples:
    - name: Gitリポジトリとの連携
      description: \`git commit\` をフックし、コミットメッセージから`/records/`にログを自動生成するGitHub Actionsを構築する。
    - name: ノートアプリとの連携
      description: Obsidianの`frontmatter`にメタデータを記述し、システムの各階層とノートを関連付ける。
# ------------------------------------------------
# 第九条：評価指標（Metrics） ― 成長の定量化
# ------------------------------------------------
evaluation_metrics:
  name: 成長の定量化
  description: システムの自己進化度を定量的に評価するための指標カテゴリを定義する。
  metric_categories:
    - name: システムの進化度
      examples: [憲法（1層）・法律（2層）の月次改訂件数]
    - name: 知的生産の活発度
      examples: [週次ログ数（4層）と、その判例化率（3層への昇格率）]
    - name: 協働の健全度
      examples: [AIからの提案に対する承認率とフィードバック数]
# ------------------------------------------------
# 第十条：役割と責任（Roles & Responsibilities） ― 統治の実行
# ------------------------------------------------
roles_and_responsibilities:
  name: 役割と責任
  description: この憲章に基づく統治を円滑に実行するため、以下の普遍的な役割と責任を定める。
  roles:
    - role: Owner (人間)
      responsibilities:
        - システムの最終意思決定者。
        - 憲章レビューの招集と主導。
        - 評価指標の定点観測。
        - AIからの提案に対する承認、修正、または却下。
    - role: Co-Pilot (AI)
      responsibilities:
        - システムの分析者・提案者。
        - 脅威の常時監視と検知。
        - 脅威に対する解決策の初期提案。
        - 人間の指示に基づく、情報収集、要約、構造化の実行。
# ------------------------------------------------
# 結びの哲学 ― この憲章を支える三つの柱
# ------------------------------------------------
foundational_pillars:
  name: この憲章を支える三つの柱
  description: システムが機能する根源にある、三つの揺るぎない普遍的な柱。
  pillars:
    - name: 秩序の柱 (なぜ構造化するのか？)
      purpose: カオスから秩序を生み出し、未来の自分が参照できる「知の体系」を構築するため。
    - name: 生命の柱 (なぜ循環させるのか？)
      purpose: 経験が原則を磨き、原則が経験を導く自己進化のループを回し、システムを「生きた」存在にするため。
    - name: 超越の柱 (なぜ協働するのか？)
      purpose: 人間の限界を超え、知的生産の質と速度を飛躍的に向上させるため。

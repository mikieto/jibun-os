---
# common/system_map.yaml はプロジェクトルート直下に移動したため、パスは不要
#
# Jibun OSの全体的なファイル構造と、各ファイルの役割、および主要な依存関係を定義する。
# AIがOSの内部構造を理解し、自己監査や自動化を支援するための機械可読なマップ。
system_architecture:
  version: 3.1.0  # バージョンを更新
  layers:
    - name: constitution
      description: OSの最高規範となる普遍的な憲法と、OS所有者個人の核となる価値観。
      files:
        - path: constitution/common/constitution.yaml  # パスを修正
          role: universal_constitution
          description: OSフレームワークの最高規範。統治機構、コア機能、運用哲学を定義。
          context_level: base_os_context
          dependencies:
            - docs/charter.md  # ルート直下からの相対パス
            - legislation/common/taxonomy.yaml  # パスを修正
            - legislation/common/implementation_framework.yaml  # パスを修正
        - path: constitution/personal/constitution.yaml  # パスを修正
          role: personal_constitution
          description: OS所有者個人の究極の目的や核となる価値観を定義する。
          context_level: base_os_context
          dependencies:
            - constitution/common/constitution.yaml  # パスを修正
    - name: legislation
      description: 憲法に基づいた具体的な運用ルール、フレームワーク、テンプレート、および個別の設定やプロジェクト/ドメイン定義。
      files:
        - path: legislation/common/immune_system.yaml  # パスを修正
          role: intellectual_immune_system_framework
          description: OSの自己防衛・自己成長メカニズム（生得免疫系）を定義する、普遍的なフレームワーク。
          context_level: base_os_context
          dependencies: []
        - path: legislation/common/innate_immunity.yaml  # パスを修正
          role: universal_guards
          description: OSフレームワークに標準搭載されている普遍的なガードルール。
          context_level: base_os_context
          dependencies: []
        - path: legislation/common/mappings.yaml  # パスを修正
          role: component_mappings
          description: OS内の異なるコンポーネント間の関連性を定義。
          context_level: base_os_context
          dependencies:  # パスを修正
            - constitution/common/constitution.yaml
            - legislation/common/immune_system.yaml
        - path: legislation/common/implementation_framework.yaml  # パスを修正
          role: implementation_framework
          description: OS運用、知識の循環プロセス（結晶化・普遍化）など、標準プロセスを定義。
          context_level: base_os_context
          dependencies: [legislation/common/taxonomy.yaml]  # パスを修正
        - path: legislation/common/taxonomy.yaml  # パスを修正
          role: system_taxonomy
          description: 四階層モデルなど、OS全体で共有されるタグや分類を定義。
          context_level: base_os_context
          dependencies: []
        - path: legislation/common/prompt_patterns.yaml  # パスを修正
          role: ai_interface_patterns
          description: (計画中) AIとの協働モデルを実装するための標準化されたプロンプトの型を定義。
          status: planned
          context_level: future_context
          dependencies: [constitution/common/constitution.yaml]  # パスを修正
        - path: legislation/common/projects/project_template.yaml  # パスを修正
          role: playbook_template_project
          description: 第二階層(Legislation)に属する、新規プロジェクト作成時の共通テンプレート。
          context_level: template_data
          dependencies: []
        - path: legislation/common/domains/domain_template.yaml  # パスを修正
          role: playbook_template_domain
          description: 第二階層(Legislation)に属する、新規ドメイン作成時の共通テンプレート。
          context_level: template_data
          dependencies: []
        - path: legislation/personal/core_principles.yaml  # パスを修正
          role: personal_implementation_config
          description: 個人のOSインスタンスの具体的な設定、役割、ガードの詳細、KPI、改善バックログなどを定義。
          context_level: base_os_context
          dependencies:
            - constitution/common/constitution.yaml  # パスを修正
            - constitution/personal/constitution.yaml  # パスを修正
        - path: legislation/personal/acquired_immunity.yaml  # パスを修正
          role: personal_adaptive_rules
          description: 個人的な経験から獲得した、特異的なルール（抗体）の集合。
          context_level: personal_data
          dependencies: [legislation/common/immune_system.yaml]  # パスを修正
        - path: legislation/personal/profile.yaml  # パスを修正
          role: personal_profile
          description: OS所有者の固定的なプロフィール（名前、タイムゾーンなど）を定義。
          context_level: personal_data
          dependencies: []
        - path: legislation/personal/projects/os_platform.yaml  # パスを修正
          role: os_development_project
          description: Jibun OSプラットフォーム自体の開発プロジェクト定義、バージョン、ステージ、開発バックログを管理。
          context_level: base_os_context
          dependencies: []
        - path: legislation/personal/domains/learning.yaml  # パスを修正
          role: user_domain_instance
          description: OS所有者の学習領域に関する定義。
          context_level: domain_context
          dependencies: [legislation/common/domains/domain_template.yaml]  # パスを修正
    - name: precedents
      description: 個々の経験や記録から抽出された、より抽象化された知識や行動パターン。現在は空。
      files: []  # 現状は空なので空リスト
    - name: records
      description: OSの運用中に動的に生成される、行動や決定に関するログデータ。
      files:
        - path: records/task_log.yaml  # パスを修正
          role: task_log
          description: タスクの進捗を記録。
          context_level: log_data
          dependencies: []
        - path: records/decision_log.yaml  # パスを修正
          role: decision_log
          description: 重要な意思決定の「なぜ」を記録。
          context_level: log_data
          dependencies: [records/task_log.yaml]  # パスを修正
        - path: records/guard_log.yaml  # パスを修正
          role: guard_invocation_log
          description: 知的免疫システムの発動記録や、AIとの対話履歴などを動的に記録。
          context_level: log_data
          dependencies:
            - legislation/common/immune_system.yaml  # パスを修正
            - legislation/personal/acquired_immunity.yaml  # パスを修正
  other_root_files:
    - path: docs/charter.md
      role: system_charter
      description: デジタルツインの理念、構造、運用を定義する最高規範。全てのコンポーネントはこの憲章の思想に従う。
      context_level: documentation
      dependencies: []
    - path: .github/workflows/validate.yaml
      role: ci_workflow
      description: CI/CDワークフロー定義。OSの構造、スキーマ、lintなどを検証。
      context_level: operational_tooling
      dependencies: []
    - path: docs/architecture_overview.md
      role: system_documentation
      description: OSの技術的なアーキテクチャ概要。docs/charter.mdを補完する、人間が読むための設計ドキュメント。
      context_level: documentation
      dependencies: [system_map.yaml, docs/charter.md]  # パスを修正 (system_mapはルート直下なので直接参照)
    - path: README.md
      role: project_readme
      description: プロジェクトの概要と導入手順。
      context_level: documentation
      dependencies: []
    - path: requirements.txt
      role: python_dependencies
      description: Pythonプロジェクトの依存ライブラリリスト。
      context_level: operational_tooling
      dependencies: []
    - path: schema/jibun_os.schema.json  # スキーマファイルの記述を追加
      role: os_schema_definition
      description: OSのYAML設定ファイルやデータ構造の整合性を検証するためのJSONスキーマ。
      context_level: operational_tooling
      dependencies: []
